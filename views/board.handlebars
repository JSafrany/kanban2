    <title>{{board.name}}</title>

    <nav class="navbar navbar-light navbar-expand-lg" style="background-color: #173753;">

        <a class="navbar-brand" href="/" style="color: white;">Faire</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item active">
                    <a class="nav-link" href="#createBoard" style="color: white;">Create Board</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="#createTask" style="color: white;">Add task <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="#addUser" style="color: white;">Assign User To Board</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="#removeUser" style="color: white;">Remove User From Board</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="#editBoard" style="color: white;">Edit Board</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="#delete" style="color: white;">Delete Board</a>
                </li>
            </ul>
        </div>
    </nav>


<div id="delete" class="overlay">
    <div class="popup">
        <h2>Are you sure you want to delete {{board.name}}?</h2>
        <div class="content">
            <a href="/boards/{{board.id}}/delete" class="btn btn-secondary" style="background-color: #276190;">Delete forever</a>
            <a href="#" class="btn btn-secondary" style="background-color: #276190;">Cancel</a>
        </div>
    </div>
</div>

<div id="removeUser" class="overlay">
    <div class="popup">
        <h2>Remove User From {{board.name}}</h2>
        <a class="close" href="#">&times;</a>
        <div class="content">
            <form action='/boards/{{board.id}}/users/remove' method='POST'>
                 <select name='username'>
                    {{#each boardUsers}}
                        <option name="{{this.username}}"> {{this.username}} </option>
                    {{/each}}
                </select>
                <button class="btn btn-secondary">Remove User</button>
            </form>
        </div>
    </div>
</div>



<div id="addUser" class="overlay">
    <div class="popup">
        <h2>Assign User to {{board.name}}</h2>
        <a class="close" href="#">&times;</a>
        <div class="content">
            <form action='/boards/{{board.id}}/users/add' method='POST'>
                 <select class="selectassign" name='username'>
                    {{#each users}}
                        <option name="{{this.username}}"> {{this.username}} </option>
                    {{/each}}
                </select>
                <button class="popupbtn">Assign User</button>
            </form>
        </div>
    </div>
</div>


<div id="createTask" class="overlay">
    <div class="popup">
        <h2>Add Task</h2>
        <a class="close" href="#">&times;</a>
        <div class="content">
            <form action='/boards/{{board.id}}/tasks/create' method='POST'>
                <label>Task Title:</label>
                <input type='text' name='taskName' required /><br>
                <label>Description:</label>
                <input type='text' name='taskDescription' required /><br>
                <label>Priority:</label>
                <select name='priority'>
                    <option name="low1">Low</option>
                    <option name='med1'>Medium</option>
                    <option name='high1'>High</option>
                    <option name='urg1'>Urgent</option>
                </select><br>
                <label>Assignee</label>
                <select name='assignee'>
                    <option name="none"></option>
                    {{#each users}}
                        <option name="{{this.username}}"> {{this.username}} </option>
                    {{/each}}
                </select><br>
                <label>Deadline</label>
                <input type="date" name="deadline" min="2020-01-01" max="2100-01-01"/><br>
                <input type='hidden' name="status" value='to do' />
                <button class="popupbtn">submit</button>
            </form>
        </div>
    </div>
</div>


<div id="createBoard" class="overlay">
	<div class="popup">
		<h2>Create Board</h2>
		<a class="close" href="#">&times;</a>
		<div class="content">
			<form action='/boards/create' method='POST'>
        <label>Name:</label>
        <input type='text' name = 'name' required/><br>
        <label>Description:</label>
        <input type='text' name ='description' required/><br>


        <button class="popupbtn">submit</button>
    </form>
		</div>
	</div>
</div>


<div id="editBoard" class="overlay">
	<div class="popup">
		<h2>Edit Board</h2>
		<a class="close" href="#">&times;</a>
		<div class="content">
			<form action='/boards/{{board.id}}/edit' method='POST'>
                <label>Name:</label>
                <input type='text' name = 'name' value='{{board.name}}' required/><br>
                <label>Description:</label>
                <input type='text' name ='description' value='{{board.description}}' required/><br>
                <button class="popupbtn">submit</button>
            </form>
		</div>
	</div>
</div>

{{!-- <div class="jumbotron" style="background-color: #98CAEC;">
    <h1 class="display-4">{{board.name}}
        <h5 class='lead' >{{board.description}}</h5>
        <div class='media'>
        {{#each boardUsers}}
            <a href="/users/{{this.id}}">
                <div class="avatar-box-board-head" draggable="true"  ondragstart="app.run('onDragStart',event)" >
                    <img id={{this.username}} class="profile-pic" src={{this.avatar}} />
                </div>
            </a>
        {{/each}}</h1>
        </div>

    </div> --}}

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.1/socket.io.js" integrity="sha512-AcZyhRP/tbAEsXCCGlziPun5iFvcSUpEz2jKkx0blkYKbxU81F+iq8FURwPn1sYFeksJ+sDDrI5XujsqSobWdQ==" crossorigin="anonymous"></script>

<main id="app"></main>

<script>

var socket = io()
socket.emit('update')

console.log('script running')
    const state = {
        toDo: [],
        doing: [],
        done:[],
        users:[],
        boardUsers:[]
    }
    const view = (state)=>`
    <div class="jumbotron" style="background-color: #98CAEC;">
    <h1 class="display-4">{{board.name}} </h1>
        <h5 class='lead' >{{board.description}}</h5>
        <div class='media'>
        ${state.boardUsers.map(user =>`
            <a href="/users/${user.id}">
                <div class="avatar-box-board-head"  >
                    <img id='${user.id}' class="profile-pic" src='${user.avatar}' />
                </div>
            </a>
        `).join()}
        </div>

    </div>
        <div class="tasks-boards-flexbox">
            <div class="flexbox-row">
                <div class="flexbox-column">
                    <div class="flexbox-column" ondragover="event.preventDefault()" ondrop="app.run('onDropToDo',event)">
                        <div><h1>To Do</h1></div>
                        <div class="todo-column">
                            ${state.toDo.map(task=>`
                            <div class="card border-0"  dragable='true' ondragstart="app.run('onDragStart',event)" style="width: 18rem;">
                                <div class="card-body" id='${task.id}' draggable='true' style="${(task.priority =="Low") ? "border: 5px solid green;": (task.priority =="Medium") ? "border: 5px solid yellow;" : (task.priority =="High") ? "border: 5px solid orange;" : "border: 5px solid red;"}">
                                    <h4 class="card-title">${task.taskName} ${(state.users.find(user=> user.id == task.UserId) ? `<img class='avatar-box-board' src='${(state.users.find(user=> user.id == task.UserId).avatar)}'>`:'')}</h4>
                                    <h6 class="card-subtitle mb-2 text-muted">${task.deadline ? `Due ${task.deadline.slice(0,10)}`:''}</h6>
                                    <h5 class="card-text">${task.taskDescription}</h5>
                                    <div class="btn-group" role="group" aria-label="Third group">
                                        <form id='${window.crypto.getRandomValues(new Uint8Array(3)).join("")}' onsubmit="app.run('delete', this);return false;">
                                            <input name ='id' type='hidden' value = ${task.id} />
                                            <button type="submit" class="btn btn-secondary">DELETE</button>
                                             <div class="btn-group" role="group" aria-label="Third group">

                                        <a class='btn btn-secondary' href='#editTask${task.id}' > EDIT </a>
                                        </form>
                                    </div>
                                        </form>
                                    </div>

                                </div>
                            </div>


                            <div id="editTask${task.id}" class="overlay">
                                <div class="popup">
                                    <h2>Edit Task</h2>
                                    <a class="close" href="#">&times;</a>
                                    <div class="content">
                                        <form action='/boards/{{board.id}}/tasks/${task.id}/update' method='POST'>
                                            <label>Task Title:</label>
                                            <input type='text' name='taskName' value='${task.taskName}' required /><br>
                                            <label>Description:</label>
                                            <input type='text' name='taskDescription' value='${task.taskDescription}' required /><br>
                                            <label>Priority:</label>
                                            <select name='priority'>
                                                <option name="low1" ${task.priority == 'Low' ? "selected" : ''}>Low</option>
                                                <option name='med1' ${task.priority == 'Medium' ? "selected" : ''}>Medium</option>
                                                <option name='high1' ${task.priority == 'High' ? "selected" : ''}>High</option>
                                                <option name='urg1' ${task.priority == 'Urgent' ? "selected" : ''}>Urgent</option>
                                            </select><br>
                                            <label>Assignee</label>
                                            <select class="selectassign"name='assignee'>
                                                <option name="none">none</option>
                                                {{#each users}}
                                                    <option name="{{this.username}}"${(task.UserId == {{this.id}}) ? "selected":""}> {{this.username}} </option>
                                                {{/each}}
                                            </select><br><br>
                                            <label>Deadline</label>
                                            <input type="date" name="deadline" ${task.deadline ? `value = '${task.deadline.slice(0,10)}'` : ''} min="2020-01-01" max="2100-01-01"/><br>
                                            <button class="popupbtn">submit</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            `).join('')}
                        </div>
                    </div>
                </div>
                <div class="flexbox-column">
                    <div class="flexbox-column" ondragover="event.preventDefault()" ondrop="app.run('onDropDoing',event)">
                        <div><h1>In Progress</h1></div>
                        <div class="inprogress-column">
                            ${state.doing.map(task=>`

                            <div class="card border-0"  dragable='true' ondragstart="app.run('onDragStart',event)" style="width: 18rem;">
                                <div class="card-body" id='${task.id}' draggable='true' style="${(task.priority =="Low") ? "border: 5px solid green;": (task.priority =="Medium") ? "border: 5px solid yellow;" : (task.priority =="High") ? "border: 5px solid orange;" : "border: 5px solid red;"}">
                                    <h4 class="card-title">${task.taskName} ${(state.users.find(user=> user.id == task.UserId) ? `<img class='avatar-box-board' src='${(state.users.find(user=> user.id == task.UserId).avatar)}'>`:'')}</h4>
                                    <h6 class="card-subtitle mb-2 text-muted">${task.deadline ? `Due ${task.deadline.slice(0,10)}`:''}</h6>
                                    <h5 class="card-text">${task.taskDescription}</h5>
                                    <div class="btn-group" role="group" aria-label="Third group">
                                        <form id='${window.crypto.getRandomValues(new Uint8Array(3)).join("")}' onsubmit="app.run('delete', this);return false;">
                                            <input name ='id' type='hidden' value = ${task.id} />
                                            <button type="submit" class="btn btn-secondary">DELETE</button>
                                            <div class="btn-group" role="group" aria-label="Third group">
                                        <a class='btn btn-secondary' href='#editTask${task.id}' > EDIT </a>
                                    </div>
                                        </form>
                                    </div>

                                </div>
                            </div>

                            <div id="editTask${task.id}" class="overlay">
                                <div class="popup">
                                    <h2>Edit Task</h2>
                                    <a class="close" href="#">&times;</a>
                                    <div class="content">
                                        <form action='/boards/{{board.id}}/tasks/${task.id}/update' method='POST'>
                                            <label>Task Title</label>
                                            <input type='text' name='taskName' value='${task.taskName}' required /><br>
                                            <label>Description</label>
                                            <input type='text' name='taskDescription' value='${task.taskDescription}' required /><br>
                                            <label>Priority:</label>
                                            <select name='priority'>
                                                <option name="low1" ${task.priority == 'Low' ? "selected" : ''}>Low</option>
                                                <option name='med1' ${task.priority == 'Medium' ? "selected" : ''}>Medium</option>
                                                <option name='high1' ${task.priority == 'High' ? "selected" : ''}>High</option>
                                                <option name='urg1' ${task.priority == 'Urgent' ? "selected" : ''}>Urgent</option>
                                            </select><br>
                                            <label>Assignee</label>
                                            <select name='assignee'>
                                                <option name="none">none</option>
                                                {{#each users}}
                                                    <option name="{{this.username}}"${(task.UserId == {{this.id}}) ? "selected":""}> {{this.username}} </option>
                                                {{/each}}
                                            </select><br><br>
                                            <label>Deadline</label>
                                            <input type="date" name="deadline" ${task.deadline ? `value = '${task.deadline.slice(0,10)}'` : ''} min="2020-01-01" max="2100-01-01"/><br>
                                            <button class="popupbtn">submit</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            `).join('')}
                        </div>
                    </div>
                </div>
                <div class="flexbox-column">
                    <div class="flexbox-column" ondragover="event.preventDefault()" ondrop="app.run('onDropDone',event)">
                        <div><h1>Done</h1></div>
                        <div class="done-column">
                            ${state.done.map(task=>`

                            <div class="card border-0" dragable='true' ondragstart="app.run('onDragStart',event)" style="width: 18rem;">
                                <div class="card-body" id='${task.id}' draggable='true' style="${(task.priority =="Low") ? "border: 5px solid green;": (task.priority =="Medium") ? "border: 5px solid yellow;" : (task.priority =="High") ? "border: 5px solid orange;" : "border: 5px solid red;"}">
                                    <h4 class="card-title">${task.taskName} ${(state.users.find(user=> user.id == task.UserId) ? `<img class='avatar-box-board' src='${(state.users.find(user=> user.id == task.UserId).avatar)}'>`:'')}</h4>
                                    <h6 class="card-subtitle mb-2 text-muted">${task.deadline ? `Due ${task.deadline.slice(0,10)}`:''}</h6>
                                    <h5 class="card-text">${task.taskDescription}</h5>
                                    <div class="btn-group" role="group" aria-label="Third group">
                                        <form id='${window.crypto.getRandomValues(new Uint8Array(3)).join("")}' onsubmit="app.run('delete', this);return false;">
                                            <input name ='id' type='hidden' value = ${task.id} />
                                            <button type="submit" class="btn btn-secondary">DELETE</button>
                                            <div class="btn-group" role="group" aria-label="Third group">
                                        <a class='btn btn-secondary' href='#editTask${task.id}' > EDIT </a>
                                    </div>
                                        </form>
                                    </div>

                                </div>
                            </div>

                            <div id="editTask${task.id}" class="overlay">
                                <div class="popup">
                                    <h2>Edit Task</h2>
                                    <a class="close" href="#">&times;</a>
                                    <div class="content">
                                        <form action='/boards/{{board.id}}/tasks/${task.id}/update' method='POST'>
                                            <label>Task Title</label>
                                            <input type='text' name='taskName' value='${task.taskName}' required /><br>
                                            <label>Description</label>
                                            <input type='text' name='taskDescription' value='${task.taskDescription}' required /><br>
                                            <label>Priority:</label>
                                            <select name='priority'>
                                                <option name="low1" ${task.priority == 'Low' ? "selected" : ''}>Low</option>
                                                <option name='med1' ${task.priority == 'Medium' ? "selected" : ''}>Medium</option>
                                                <option name='high1' ${task.priority == 'High' ? "selected" : ''}>High</option>
                                                <option name='urg1' ${task.priority == 'Urgent' ? "selected" : ''}>Urgent</option>
                                            </select><br>
                                            <label>Assignee</label>
                                            <select name='assignee'>
                                                <option name="none">none</option>
                                                {{#each users}}
                                                    <option name="{{this.username}}"${(task.UserId == {{this.id}}) ? "selected":""}> {{this.username}} </option>
                                                {{/each}}
                                            </select><br><br>
                                            <label>Deadline</label>
                                            <input type="date" name="deadline" ${task.deadline ? `value = '${task.deadline.slice(0,10)}'` : ''} min="2020-01-01" max="2100-01-01" /><br>
                                            <button class="popupbtn">submit</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `






const update={
    onDropToDo: async (state,event)=>{
        event.preventDefault()
        const id = await event.dataTransfer.getData('text')
        console.log(id)
        const postRequest ={
            method : 'POST',
            headers:{
                'Content-Type': 'application/json'
            },
            body:JSON.stringify({id:id,status:'to do'})
        }
        fetch(`/tasks/${id}/update`,postRequest).then(()=>app.run('getTasks'))
        socket.emit('update')
        return state
    },
    onDropDoing: async (state,event)=>{
        event.preventDefault()
        const id = await event.dataTransfer.getData('text')
        console.log(id)
        const postRequest ={
            method : 'POST',
            headers:{
                'Content-Type': 'application/json'
            },
            body:JSON.stringify({id:id,status:'in progress'})
        }
        fetch(`/tasks/${id}/update`,postRequest).then(()=>app.run('getTasks'))
        socket.emit('update')
        return state
    },
    onDropDone: async (state,event)=>{
        event.preventDefault()
        const id = await event.dataTransfer.getData('text')
        console.log(id)
        const postRequest ={
            method : 'POST',
            headers:{
                'Content-Type': 'application/json'
            },
            body:JSON.stringify({id:id,status:'done'})
        }
        fetch(`/tasks/${id}/update`,postRequest).then(()=>app.run('getTasks'))
        socket.emit('update')
        return state
    },
    onDragStart: (state,event) =>{
        console.log(event.target)
        event.dataTransfer.setData('text',event.target.id)
        return state
    },
    delete: (state,form)=>{
        const data = new FormData(form)
        const id = data.get('id')
        const postRequest={
            method : 'POST',
            headers:{
                'Content-Type': 'application/json'
            },
            body:JSON.stringify({id:id})
        }
        fetch(`/tasks/${id}/delete`,postRequest).then(()=>app.run('getTasks'))
        socket.emit('update')
        return state
    },
    getTasks: async (state)=>{
        state.done = await fetch('/boards/{{board.id}}/tasks/done').then(res=>res.json())
        state.doing = await fetch('/boards/{{board.id}}/tasks/doing').then(res=>res.json())
        state.toDo = await fetch('/boards/{{board.id}}/tasks/todo').then(res=>res.json())
        state.users = await fetch('/users').then(res=>res.json())
        state.boardUsers = await fetch('/boards/{{board.id}}/users').then(res=>res.json())
        return state
    }
}

app.start('app',state,view,update)
socket.on('update',()=>{
    app.run('getTasks')
})
socket.on('goHome',()=>{
    fetch('/')
})
app.run('getTasks')
</script>


                    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
                        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
                        crossorigin="anonymous"></script>
                    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
                        integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
                        crossorigin="anonymous"></script>
